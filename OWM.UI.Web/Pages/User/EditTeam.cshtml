@page "/User/Teams/Edit/{teamid?}"
@model OWM.UI.Web.Pages.User.EditTeamModel
@{
    Layout = "Shared/UserLayout";
}

<style>
    </style>
<link href="~/css/EditTeam.css" rel="stylesheet" />

<div class="row">
    <div class="col-md-7">
        <h4 class="font-weight-bold">@Model.TeamInformation.TeamName</h4>
        <h6 class="x-small text-muted">Created on: @Model.TeamInformation.DateCreated.ToString(Application.Services.Utils.Constants.DateFormat_LongMonth)</h6>
    </div>
    <div class="col-md-5 text-right">
        <a asp-page="/User/InviteMember" asp-route-teamid="@Model.TeamId" class="btn btn-sm btn-success mt-3">
            <span class="fa fa-envelope"></span> Invite a friend
        </a>
    </div>
</div>
<hr class="mt-1"/>
<div class="row">
    <div class="col-md-8 pb-3">
        <div id="badges" class="alert alert-info" style="height: 100%;">
            <div class="small mb-1">Occupations that can join this team:</div>
            @foreach (var occ in Model.TeamInformation.Occupations)
            {
                <span class="badge">@occ</span>
            }
        </div>
    </div>
    <div class="col-md-4">
        <div class="alert alert-info" id="alert">
            <div class="small">Can members join this team?</div>
            <div class="mr-1 mt-2">
                <label class="switch">
                    @if (Model.TeamInformation.IsClosed)
                    {
                        <input type="checkbox" class="success">
                        <span class="slider round"></span>
                    }
                    else
                    {
                        <input type="checkbox" class="success" checked>
                        <span class="slider round"></span>
                    }
                </label>

            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-4 col-xl-4">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="fa fa-map-marker-alt display-4 text-info"></div>
                    <div class="ml-3">
                        <div class="text-muted x-small">Miles Pledged</div>
                        <div>@Model.TeamInformation.TotalMilesPledged</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-4 col-xl-4">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="fas fa-map-marked-alt display-4 text-primary"></div>
                    <div class="ml-3">
                        <div class="text-muted x-small">Miles Completed</div>
                        <div>@Model.TeamInformation.TotalMilesCompleted</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-4 col-xl-4">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="fa fa-users display-4 text-warning"></div>
                    <div class="ml-3">
                        <div class="text-muted x-small">Members</div>
                        <div>@Model.TeamInformation.TeamMembers.Count</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row mt-3">
    <div class="col-md-12">
        <div class="list-group" id="statusmessage">
            <div class="list-group-item active text-center">
                <div class="row">
                    <div class="col-md-4">
                        <input class="form-control form-control-sm" id="searchuser" placeholder="Search Memebr .." />
                    </div>
                    <div class="col-md-4">
                        <p class="mt-2 mb-0">Members</p>
                    </div>
                    <div class="col-md-4">
                    </div>
                </div>
            </div>
            <div style="overflow-y: auto; overflow-x: hidden; max-height: 250px;" id="search">
                @foreach (var member in Model.TeamInformation.TeamMembers)
                {
                    <div class="list-group-item text-left list-group-item-action">
                        <div class="media">
                            <img class="mr-3 rounded-circle" src="@member.ProfilePicture" alt="@member.FirstName @member.SurName">
                            <div class="media-body">
                                <div class="row">
                                    <div class="col-5">
                                        <a asp-route-profileid="@member.ProfileId" asp-page="/UserProfile"><h5 class="h5 mt-0 mb-0 font-weight-bold">@member.FirstName @member.SurName</h5></a>
                                        <p class="small mt-2 mb-0">@member.City, @member.Country</p>
                                    </div>
                                    <div class="col-5">
                                        <p class="mb-3">
                                            Miles Pledged : <span class="badge badge-primary">@member.MyPledgedMiles</span>
                                        </p>
                                        <p class="mb-0">
                                            Miles Completed : <span class="badge badge-success">@member.MyCompletedMiles</span>
                                        </p>
                                    </div>
                                    @if (!member.IsCreator)
                                    {
                                        if (member.IsKickedOut)
                                        {
                                            <div class="col-2 text-right">
                                                <button class="btn-sm btn-danger" data-toggle="modal" data-target="#KickModal" onclick="kickModalOpen(@Model.TeamId, @Model.ProfileId, @member.ProfileId, this);">Unblock</button>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="col-2 text-right">
                                                <button class="btn-sm btn-danger" data-toggle="modal" data-target="#KickModal" onclick="kickModalOpen(@Model.TeamId, @Model.ProfileId, @member.ProfileId, this);">Kick</button>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="row mt-1">
    <div class="col-md-12">
        <span class="small">Description</span>
        <textarea class="form-control" id="description" style="resize: none;">@Model.TeamInformation.Description</textarea>
    </div>
</div>
<div class="row mt-3">
    <div class="col-md-12">
        <button class="btn btn-success" type="button" id="savechanges">Save Changes</button>
    </div>
</div>

<div class="modal fade" id="KickModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body small bg-light rounded-top">
                <p class="p-lg-5 font-weight-bold mb-0">Are you sure you want kick <span class="text-danger" id="modalUsername"></span> ?</p>
            </div>
            <div class="modal-footer text-center">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" kickuser class="btn btn-danger" onclick="kickMember();">Kick Out</button>
            </div>
        </div>
    </div>
</div>

<script>
    var teamId, profielId, mprofileId;
    function kickModalOpen(t, p , mp , th) {
        $('#modalUsername').text(($(th).parent().parent().find('a')[0].innerText));
        teamId = t;
        profielId = p;
        mprofileId = mp;
    }

    function kickMember() {
        AjaxGet({
            url: '/api/kickmember',
            param: {
                tId: teamId,
                pId: profielId,
                mpId :mprofileId
            },
            func: kickChangesApplied,
            err: kickErrorOccured
        });
    }

    function kickChangesApplied(e) {
        $('#KickModal').modal('toggle');
        ElementGreenalert('statusmessage', 'top center', e.displayMessage);
    }

    function kickErrorOccured(xhr, httpStatusMessage, customErrorMessage) {
        ElementRedalert('KickModal', 'top center', xhr.responseText);
    }

    $(function () {
        $("#searchuser").on("keyup", function() {
            var value = $(this).val().toLowerCase();
            $("#search div.list-group-item").filter(function(index, ele) {
                $(ele).toggle($(ele).text().toLowerCase().indexOf(value) > -1)
            });
        });

        $('input.success').change(function() {
            AjaxGet({
                url: '/api/Prevent',
                param: { tId: @Model.TeamId, open: this.checked },
                func: changesApplied,
                err: errorOccured
            });

            function changesApplied(e) {
                ElementGreenalert('alert', 'bottom center', e.displayMessage);
            }

            function errorOccured(xhr, httpStatusMessage, customErrorMessage) {
                ElementRedalert('alert', 'bottom center', xhr.responseText);
            }
        });
        $('#savechanges').on('click',
            function() {
                AjaxGet({
                    url: '/api/SaveChanges',
                    param: { tId: @Model.TeamId, description: $('#description').val() },
                    func: saveChanges
                });

                function saveChanges(e) {
                    ElementGreenalert('savechanges', 'right center', e.displayMessage);
                }
            });
        var x = 0;
        $('#badges span.badge').each(function () {
            $(this).addClass(getRandomClass());
            x++;
        });
        function getRandomClass() {
            var classes = ["badge-info", "badge-primary", "badge-secondary", "badge-success", "badge-danger", "badge-warning", "badge-dark"];
            if (x === classes.length - 1) {
                x = 0;
            }
            return classes[x];
        }
    })
</script>